# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build get-zap

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  build:
    name: Build local
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Build
      run: go build -v ./...
    - name: Test
      run: go test -v ./...

  build-all:
    name: Build all binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exesuffix: ['', '.exe']
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Build get-zap for a given architecture
        if: ${{ (matrix.goos == 'windows' && matrix.exesuffix == '.exe') || (matrix.goos != 'windows' && matrix.exesuffix != '.exe' ) }}
        run: GOOS=${{matrix.goos}} GOARCH=${{matrix.goarch}} go build -o bin/get-zap-${{matrix.goos}}-${{matrix.goarch}}${{matrix.exesuffix}}
      - name: Archive the binary
        if: ${{ (matrix.goos == 'windows' && matrix.exesuffix == '.exe') || (matrix.goos != 'windows' && matrix.exesuffix != '.exe' ) }}
        uses: actions/upload-artifact@v2
        with:
          name: get-zap-${{matrix.goos}}-${{matrix.goarch}}${{matrix.exesuffix}}
          path: bin/get-zap-${{matrix.goos}}-${{matrix.goarch}}${{matrix.exesuffix}}
  
